group = "com.securemetric.myidreader.flutter_securemetric"
version = "1.0"

buildscript {
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath("com.android.tools.build:gradle:8.7.3")
    }
}

rootProject.allprojects {
    repositories {
        google()
        mavenCentral()
        flatDir {
            // e.g. dirs project(':url_launcher').file('libs')  - don't miss the ':'
            dirs project(':flutter_securemetric').file('libs')
        }
    }
}

apply plugin: "com.android.library"

android {
    namespace = "com.securemetric.myidreader.flutter_securemetric"

    compileSdk = 35

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    defaultConfig {
        minSdk = 21
    }

    testOptions {
        unitTests.all {
            testLogging {
               events "passed", "skipped", "failed", "standardOut", "standardError"
               outputs.upToDateWhen {false}
               showStandardStreams = true
            }
        }
    }
}

dependencies {
    // ✅ Required for Flutter plugins to resolve FlutterPlugin, MethodChannel etc.
    implementation "io.flutter:flutter_embedding_debug:1.0.0"
    testImplementation("junit:junit:4.13.2")
    testImplementation("org.mockito:mockito-core:5.18.0")

    // ✅ Other normal deps
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.1.0'
    implementation 'com.google.code.gson:gson:2.13.1'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:2.1.0'
    implementation 'io.flutter:flutter_embedding_debug:1.0.0'

    //  ✅ Add AAR dependency
    implementation(name: 'myID', ext: 'aar') {
        exclude group: 'com.morpho.morphosmart.sdk', module: 'libc++_shared-armeabi-v7a'
        exclude group: 'com.morpho.morphosmart.sdk', module: 'libc++_shared-arm64-v8a'
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib-jdk8'
    }
}
